services:
  frontend:
    build:
      context: ./Frontend
    image: borneman/frontend:latest
    ports:
      - "4200:4200"
    networks:
      - my-network

  backend:
    build:
      context: ./Backend
    image: borneman/backend:latest
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/mydb?replicaSet=myReplicaSet
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    ports:
      - "3000:3000"
    networks:
      - my-network

  mongo1:
    image: mongo:5
    container_name: mongo1
    volumes:
      - mongo1-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - my-network
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo1"]

  mongo2:
    image: mongo:5
    container_name: mongo2
    volumes:
      - mongo2-data:/data/db
    ports:
      - "27018:27017"
    networks:
      - my-network
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo2"]

  mongo3:
    image: mongo:5
    container_name: mongo3
    volumes:
      - mongo3-data:/data/db
    ports:
      - "27019:27017"
    networks:
      - my-network
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "localhost,mongo3"]

  mongo-init-replicaset:
    image: mongo:5
    container_name: mongo-init-replicaset
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - my-network
    entrypoint: >
      bash -c "
      sleep 10 &&
      mongo --host mongo1:27017 <<EOF
        rs.initiate({
          _id: 'myReplicaSet',
          members: [
            { _id: 0, host: 'mongo1:27017' },
            { _id: 1, host: 'mongo2:27017' },
            { _id: 2, host: 'mongo3:27017' }
          ]
        });
        EOF
      "

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo1
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongo1
    ports:
      - "8081:8081"
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    ports:
      - "3001:3000"
    networks:
      - my-network
    volumes:
      - grafana-data:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - my-network

networks:
  my-network:

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
  grafana-data:
